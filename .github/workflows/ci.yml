name: CI Checks

on:
  push:

env:
  CARGO_TERM_COLOR: always

jobs:
  building:
    name: Building
    continue-on-error: ${{ matrix.experimental || false }}
    strategy:
      matrix:
        # All generated code should be running on stable now
        rust:
          - stable
          - nightly
        include:
          # Nightly is only for reference and allowed to fail
          - rust: nightly
            experimental: true
        os:
          # Check compilation works on common OSes
          # (i.e. no path issues)
          - ubuntu-latest
          # - macOS-latest
          # - windows-latest
          - self-hosted
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - uses: Swatinem/rust-cache@v2

      - run: cargo build --all

      - run: cargo build --all --release

  testing:
    needs: building
    name: Testing
    strategy:
      matrix:
        os:
          - ubuntu-latest
          # - macOS-latest
          - self-hosted
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - uses: Swatinem/rust-cache@v2

      - name: Start SurrealDB
        uses: jvllmr/surrealdb-action@2.0.0
        with:
          surrealdb-version: v2.0.1
          surrealdb-port: 8080
          surrealdb-user: root
          surrealdb-password: root

      - run: cargo test
        env:
          REFRESH_JWT_KEY: "REFRESH"
          ACCESS_JWT_KEY: "ACCESS"
          DB_USER: "root"
          DB_PASSWORD: "root"
          DB_HOST: "127.0.0.1:8080"

  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy

      - uses: Swatinem/rust-cache@v2

      - run: cargo clippy --all-targets

  formatting:
    name: Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt

      - uses: Swatinem/rust-cache@v2

      - run: cargo fmt -- --check

  image:
    needs: testing
    uses: ./.github/workflows/image.yml
    secrets: inherit
